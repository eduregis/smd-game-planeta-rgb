<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_platformM</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ajustes iniciais
sprite_index = -1; // esse comando deixa o objeto invisivel

//Iniciando variáveis
dir = -1; // direção 
movespeed = 3; //velocidade de movimento
hsp = 0; //velocidade horizontal

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Teste de colisão modificado

mask_index = spr_platformM;
hsp = dir * movespeed; // dando movimento à plataforma

// Colisão horizontal
if (place_meeting(x + hsp,y ,obj_wall)) // teste de colisão com o objeto parede (obj_wall).
{
    while(!place_meeting(x + sign(hsp),y ,obj_wall)) //while gera um loop que só para quando a sua afirmação for falsa,
    //a função sign(hsp) é uma indicadora que retorna o sentido da variável mult. por 1.
    {
    x += sign(hsp) // joga a plataforma 1 pixel na direção que está seguindo
    }
    hsp = 0 // zera a movimentação horizontal
    dir *= -1; // coloca a plataforma para a direção oposta, ao colidir com a parede.
} 
x += hsp; // movimenta a plataforma na direção desejada

//Colisão com o personagem
if (instance_exists(obj_player))//testa se existe interação com o personagem
{
    if (round(obj_player.y + (obj_player.sprite_height/2)) &gt; y) || (obj_player.key_down) mask_index = -1;
    //o comando faz um teste de colisão com o personagem e a plataforma por cima, se o
    //personagem não está totalmente por cima da plataforma ou a tecla "seta para baixo"
    // for pressionada, o personagem irá passar pelo bloco como se ele não estivesse lá
    else 
    {
        mask_index = spr_platformM; //caso contrário, o plataforma terá a mesma máscara de colisão inicialmente definida
        if(place_meeting(x,y-1,obj_player))
        {
            obj_player.hsp_carry = hsp;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desenhar o sprite
draw_sprite(spr_platformM,0,x,y); //desenha o sprite informado, com o endereço de imagem e as coordenas descritas
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
