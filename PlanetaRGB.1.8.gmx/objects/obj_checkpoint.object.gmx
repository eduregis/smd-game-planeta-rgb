<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_save</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Trabalhando imagens
image_speed = 0;// trava a velocidade da troca de frame do sprite seja 0
image_index = 0;// escolhe como sprite a ser exibido o primeiro da fila
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checagens gerais
image_angle += 1; // gira a imagem do sprite um ângulo a cada frame 

if(place_meeting(x,y,obj_player)) // evento disparado quando  o jogador "pega" um checkpoint
{
    // as variáveis a seguir representam o último checkpoint que o jogador passou
    global.checkpoint = id; // salva o id (identificador) desse checkpoint
    global.checkpointx = x; // salva a coordenada x desse checkpoint
    global.checkpointy = y; // salva a coordenada y desse checkpoint
    global.checkpointR = room; // salva a sala desse checkpoint
    
    if(image_index == 0){
        audio_play_sound(snd_checkpoint,0,0);//som ao chegar ao checkpoint
    }
}

// Mudança de imagem
if(global.checkpointR == room) // checa a sala do último checkpoint
{
    if(global.checkpoint == id) // checa o id do último checkpoint
    {
        image_index = 1; // muda a imagem caso aquele seja o checkpoint ativo
    }
    else
    {
        image_index = 0; // muda a imagem caso aquele checkpoint deixe de ser o ativo
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
