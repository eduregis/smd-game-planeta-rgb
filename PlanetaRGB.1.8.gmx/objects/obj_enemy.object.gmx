<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Iniciando variáveis

dir = -1; // direção 
movespeed = 1.5; // velocidade de movimento
grav = 0.2; // gravidade
hsp = 0; // velocidade horizontal
vsp = 0; // velocidade vertical
fearofheight = 0; // traduzindo, "medo de altura", variável que fará com que o inimigo fique na plataforma, variável de controle
hitfrom = 0;//variável de controle, auxilia quando o inimigo morre
count_step = 15; //variável de controle dos passos
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Não há nada aqui!
//Este Begin Step foi criado para ser sobreescrito por herança
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checagens gerais
hsp = dir * movespeed; // dando movimento ao inimigo
vsp += grav; // dando gravidade ao inimigo

// Colisão horizontal
if (place_meeting(x + hsp,y ,obj_wall)) // teste de colisão com o objeto parede (obj_wall).
{
    while(!place_meeting(x + sign(hsp),y ,obj_wall)) // "while" gera um loop que só para quando a sua afirmação for falsa,
    // a função "sign(hsp)" é uma indicadora que retorna o sentido da variável mult. por 1.
    {
    x += sign(hsp) // joga o inimigo 1 pixel na direção que está seguindo
    }
    hsp = 0 // zera a movimentação horizontal
    dir *= -1; // coloca o inimigo para a direção oposta, ao colidir com a parede.
} 
x += hsp; // movimenta o inimigo na direção desejada

// Colisão vertical (idêntica a colisão horizontal, mudando apenas algumas variáveis)
if (place_meeting(x ,y + vsp,obj_wall))// teste de colisão com o objeto parede (obj_wall).
{
    while(!place_meeting(x ,y + sign(vsp),obj_wall)) // "while" gera um loop que só para quando a sua afirmação for falsa,
    //a função "sign(hsp)" é uma indicadora que retorna o sentido da variável mult. por 1.
    {
    y += sign(vsp) // joga o inimigo 1 pixel na direção que está seguindo
    }
    vsp = 0 // zera a movimentação vertical
    
    if(fearofheight) &amp;&amp; !position_meeting(x+(sprite_width/2)*dir, y+(sprite_height/2) + 8,obj_wall)
    // checa se o inimigo está na borda de uma plataforma
    {
    dir *= -1; // muda a direção do inimigo, impedindo que ele caia
    }
} 
y += vsp; // movimenta o inimigo na direção desejada

// Colisão do personagem com o inimigo
if (place_meeting(x,y,obj_player)){ // testa se há contato com o personagem
        scr_death(); // ativa o script, que irá reviver o peronagem em um checkpoint, caso tenha pegado um, ou ira reviver o personagem no começo da sala   
}

// Colisão com outro inimigo
if (place_meeting(x,y,obj_enemy)) // testa se há contato com outro inimigo
{
    dir*= -1;// muda a direção do inimigo
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
